!function(window,angular,undefined){"use strict";angular.module("ngQueue",[]).factory("$queue",["$timeout","$q",function($timeout,$q){function Queue(callback,options){if(options=angular.extend({},defaults,options),!angular.isFunction(callback))throw new Error("callback must be a function");var cleared=!1,timeoutProm=null;this.queue=[],this.delay=options.delay,this.complete=options.complete,this.paused=options.paused,this.max_concurrent=options.max_concurrent,this.persistent=options.persistent,this.user_callback=callback,this.active_count=0,this.global_pause=!1;var stop=function(){timeoutProm&&$timeout.cancel(timeoutProm),timeoutProm=null};this.callback=function(item){var _this=this;return console.info("remain in queue: ",this.size()),$timeout(function(){_this.user_callback.call(_this,item)},1),item.network_promise!==undefined?item.network_promise.promise:$q.resolve()},this.size=function(){return this.queue.length},this.add=function(item){return console.log("Add item to queue: ",item),this.addEach([item])},this.addFirst=function(item){return this.addEachFirst([item])},this.addEach=function(items){return items&&(cleared=!1,this.queue=this.queue.concat(items),window.ku=this.queue),this.paused||this.start(),this.size()},this.addEachFirst=function(items){return items&&(cleared=!1,this.queue=items.concat(this.queue)),this.paused||this.start(),this.size()},this.clear=function(){var orig=this.queue;return stop(),this.queue=[],cleared=!0,orig},this.pause=function(){console.info("queue pause"),stop(),this.paused=!0},this.globalPause=function(){this.global_pause=!0,this.pause()},this.globalStart=function(){this.global_pause=!1,this.start()},this.start=function(){if(!this.global_pause){var _this=this;this.paused=!1,this.size()&&!timeoutProm&&function loopy(){var item;if(stop(),!(_this.paused||_this.max_concurrent>0&&_this.active_count>_this.max_concurrent)){if(!_this.size()&&!_this.persistent)return cleared=!0,void(angular.isFunction(_this.complete)&&_this.complete.call(_this));if(!_this.size()&&_this.persistent)return void(cleared=!0);_this.active_count+=1,item=_this.queue.shift();var promise=_this.callback.call(_this,item);if(-1===_this.max_concurrent)timeoutProm=$timeout(loopy,_this.delay);else{var callnext=function(){_this.active_count-=1,timeoutProm=$timeout(loopy,_this.delay)};try{promise.then(function(success){callnext()},function(error){callnext()}).catch(function(error){callnext()})}catch(error){callnext()}}}}()}},this.indexOf=function(item){if(this.queue.indexOf)return this.queue.indexOf(item);for(var i=0;i<this.queue.length;i++)if(item===this.queue[i])return i;return-1}}var defaults={delay:100,persistent:!1,max_concurrent:-1,complete:null,paused:!1};return Queue.queue=function(callback,options){return new Queue(callback,options)},Queue}])}(window,window.angular);