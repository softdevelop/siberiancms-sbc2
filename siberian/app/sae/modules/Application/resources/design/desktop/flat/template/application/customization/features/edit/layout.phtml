<?php $option_value = $this->getOptionValue(); ?>
<?php $layouts = $option_value->getLayouts(); ?>
<?php if($layouts->count() > 1) : ?>
<div class="margin-bkg">
    <h3 class="title-editor no-border-radius title-feature-indent">
        <?php echo $this->_('Design'); ?>
        <button type="button" id="toggle_layout" class="toggle_design color-blue pull-right bt-header-right btn">
            <i class="fa fa-angle-down"></i>
        </button>
    </h3>
    <div id="change_layout" class="design subcontent content-feature" style="display:none;">
        <div class="row">
            <div class="col-md-12 layouts">
                <?php foreach($layouts as $layout) : ?>
                <a href="<?php echo $this->getUrl('application/customization_features/setlayout'); ?>" class="layout<?php if($option_value->getLayoutId() == $layout->getCode()):  ?> selected<?php endif; ?>" rel="<?php echo $layout->getCode(); ?>">
                    <img src="<?php echo $this->getImage($layout->getPreview()); ?>" title="<?php echo $layout->getName(); ?>" alt="<?php echo $layout->getName(); ?>" width="100" />
                    <input type="hidden" name="layout_id" value="<?php echo $layout->getCode(); ?>" />
                    <input type="hidden" name="value_id" value="<?php echo $option_value->getId(); ?>" />
                </a>
                <?php endforeach; ?>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">

    var option_layout = {
        callbacks: new Array(),
        is_initialized: false,
        init: function() {
            this.processEvents();
            this.is_initialized = true;
        },
        processEvents: function() {

            $('#toggle_layout').click(function() {
                $('#change_layout').stop().slideToggle(300, function() {
                    if($('#change_layout').is(':visible')) {
                        $('#toggle_layout').children('i').removeClass('fa-angle-down').addClass('fa-angle-up');
                        $('#toggle_layout').removeClass('color-blue');
                    }
                    else {
                        $('#toggle_layout').children('i').removeClass('fa-angle-up').addClass('fa-angle-down');
                        $('#toggle_layout').addClass('color-blue');
                    }
                });
            });

            $('#change_layout').find(".layout").click(function() {

                if($(this).hasClass("selected")) return false;

                var _that = $(this);
                reload(this, this.href, true, function(data) {
                    if(data.success) {
                        iframe.f.setLayoutId(<?php echo $option_value->getId(); ?>, _that.attr("rel"));
                        iframe.f.setPath("<?php echo $option_value->getPath(null, array('value_id' => $option_value->getId()), "mobile"); ?>", true);
                        $("#change_layout").find(".layout").removeClass("selected");
                        _that.addClass("selected");
                    }
                });

                return false;
            });

        },
        destroy: function() {
            if(this.is_initialized) {
                $('#toggle_layout').unbind('click');
                $('#change_layout').find(".layout").unbind("click");
                this.is_initialized = false;
            }
        }
    }

</script>
<style>
    .design a.layout {
        display: block;
        float: left;
        margin-left: 10px;
        margin-top: 5px;
        border-radius: 3px;
        padding: 4px;
        transition: none;
    }

    .design a.layout.selected {
        padding: 2px;
        border: 1px solid;
    }

    .design .layouts a.layout img {
        border-radius: 3px;
    }

</style>
<?php endif; ?>