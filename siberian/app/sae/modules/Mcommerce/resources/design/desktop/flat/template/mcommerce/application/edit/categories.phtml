<?php
$option = $this->getOptionValue();
$mcommerce = $option->getObject();
$category = $mcommerce->getRootCategory();
?>

<div id="category_list"
     pos="1">
    <h3 class="title-editor no-border-radius title-feature-indent">
        <?php echo $this->_('My categories'); ?>
        <button type="button"
                id="add_category"
                onclick="categories.edit(null);"
                class="edit_category color-blue pull-right bt-header-right btn"
                rel="new">
            <i class="fa fa-plus"></i>
        </button>
    </h3>
    <div class="container-fluid first-row-feature content-feature">
        <ul id="category_root"
            class="tree list-group">
            <?php echo $this->getLayout()->addPartial('root_category_'.$category->getId(), get_class($this), 'mcommerce/application/edit/catalog/categories/list.phtml')
                ->setCategory($category)
                ->toHtml()
            ;
            ?>
        </ul>

        <form id="editCategoryForm"
              action="<?php echo $this->getUrl('mcommerce/application_catalog_category/edit'); ?>">
            <input id="edit_category_id"
                   type="hidden"
                   name="category_id"
                   value="" />
            <input id="edit_parent_id"
                   type="hidden"
                   name="parent_id"
                   value="" />
            <input type="hidden"
                   name="option_value_id"
                   value="<?php echo $option->getId(); ?>" />
        </form>
    </div>
</div>

<script type="text/javascript">

    var category_background_uploader = new Uploader();
    var categories = {
        is_loaded: false,
        current_category_id: null,
        processEvents: function() {

            $('#category_root').on('click', '.category_title', function(e) {
                e.preventDefault();
                var a = $(e.currentTarget);
                if(a.hasClass('active')) return false;
                $('.category_title.active').removeClass('inner_content active');
                $('.category_actions').hide();
                a.addClass('inner_content active');
                a.find('.category_actions').show();
                this.current_category_id = a.attr('rel');
                return false;
            }.bind(this));

            $('#category_root').on('click', '.remove_category', function(e) {
                if(!confirm('<?php echo addslashes($this->_("Are you sure you want to delete this category and all its subcategories?")) ?>')) return false;
                var url = '<?php echo $this->getUrl('mcommerce/application_catalog_category/delete', ['option_value_id' => '#{value_id}', 'category_id' => '#{category_id}']); ?>';
                url = url.replace('#{value_id}', '<?php echo $option->getId(); ?>').replace('#{category_id}', this.current_category_id);
                reload(e.target, url, true, function(datas) {
                    if(datas.success) {
                        $('#category_'+datas.category_id).slideUp(300, function() {
                            $(this).remove();
                        });
                        $('#root_category_title').click()
                    }
                });
            }.bind(this));

            this.createSortableList();

            $('#root_category_title').click();

            this.current_category_id = '<?php echo $category->getId(); ?>';
            this.is_loaded = true;

        },

        close: function() {

        },
        prepareRow: function(id) {

        },

        createSortableList: function() {
            //Drag catégories
            $('#category_root').nestedSortable({
                helper: 'clone',
                forceHelperSize: true,
                excludeRoot: true,
                distance: 5,
                forcePlaceholderSize: true,
                tolerance: 'pointer',
                toleranceElement: '> div',
                listType: 'ul',
                items: 'li',
                placeholder: 'placeholder list-group-item',
                zIndex: 9999,
                handle: 'i.handle-for-nested',
                protectRoot: true,
                rootID: 'category_<?php echo $category->getId(); ?>',
                update: function (e, ui) {
                    $('#category_root').nestedSortable('refresh');
                    var categories = $('#category_root')
                        .nestedSortable('toArray')
                        .map(function (item) {
                            return {
                                id: item.id,
                                parentId: item.parent_id
                            }
                        });
                    $('#category_root').nestedSortable('refresh');

                    var postData = {
                        'categories': categories
                    };
                    formget('/mcommerce/application_catalog_category/order?version=post', postData);
                }.bind(this)
            });
        },
        showForm: function() {

            $('#category_root').nestedSortable('destroy');

            $('#category_title').keyup(function() {
                $('#category_title_'+$(this).attr('rel')).html($(this).val());
            });
            $('#categoryForm').submit(function(e) {
                var form = e.target;
                if(!$(form).valid()) return false;
                reload(form, form.action, true, function(datas) {
                    if(datas.success) {
                        if(datas.row_html) {
                            $('#children_of_'+this.current_category_id).append(datas.row_html);
                        }
                        this.hideForm();
                    }
                }.bind(this));
                return false;
            }.bind(this));
            $('#cancel_category_edition').click(function() {
                if(confirm('<?php echo addslashes($this->_('Are you sure you want to close without saving')); ?>')) {
                    this.hideForm();
                }
            }.bind(this));

            //Supprime l'image de la catégorie
            $('#remove_background_img').click(function() {
                $('#category_file').val('');
                $('#remove_category_background').val('1');
                $('#remove_background_img').hide();
                $('#background_img_src').hide();
                $('#upload_category_background').show();
                return false;
            }.bind(this));

            $('#upload_category_background').click(function() {
                $('#category_background_file').trigger('click');
                return false;
            });

            //Upload image
            $('#category_background_file').fileupload({
                dataType: 'json',
                add: function(e, data) {
                    data.submit();
                    category_background_uploader.showProgressbar();
                },
                progressall: function(e, data) {
                    category_background_uploader.moveProgressbar(data);
                },
                fail: function (el, data) {
                    category_background_uploader.hide();
                    category_background_uploader.showError(JSON.parse(data.jqXHR.responseText).message);
                },
                done: function(e, data) {
                    if (data.result.error) {
                        category_background_uploader.hide();
                        category_background_uploader.showError(data.result.message);
                    }
                    if (data.result.success) {
                        category_background_uploader.hide();
                        var params = new Array();
                        params["url"] = '<?php echo $this->getUrl('template/crop/crop'); ?>';
                        params["file"] = data.result.files;
                        params["output_w"] = 640;
                        params["output_h"] = 400;
                        params["output_url"] = '<?php echo str_replace('/', '$', $this->getUrl('mcommerce/application_catalog_category/crop')) ?>';
                        params["uploader"] = 'category_background_uploader';
                        category_background_uploader.crop(params);
                        category_background_uploader.callback = function(file) {
                            $('#category_file').val(file);
                            $('#remove_category_background').val('');
                            $('#upload_category_background').hide();
                            $('#background_img_src').attr('src', '<?php echo Core_Model_Directory::getTmpDirectory(); ?>/'+file);
                            $('#remove_background_img').show();
                            $('#background_img_src').show();
                        }
                    }
                }
            });


            $('#edit_category').slideDown(300, function() {
                $('#category_form').fadeIn(300, function() {$('#category_title').focus();});
            });


        },
        hideForm: function() {

            $('#category_title').unbind('keyup');
            $('#categoryForm').unbind('submit');
            $('#upload_category_background').unbind('click');
            $('#remove_background_img').unbind('click');

            $('#category_form').fadeOut(300, function() {
                $('#edit_category').slideUp(300, function() {
                    $(this).remove();
                });
            });

            $('#category_dummy').remove();

            this.createSortableList();

        },

        edit: function(category_id) {

            if($('#edit_category').length) return;

            var form = $('#editCategoryForm');
            var parent_id = null;
            $('#edit_category_id').val(category_id);
            if(!category_id) parent_id = this.current_category_id;
            $('#edit_parent_id').val(parent_id);

            reload(form, form.attr('action'), true, function(datas) {
                if(datas.form_html) {

                    var ul = $('#category_'+this.current_category_id).children('ul');
                    if(!ul.attr('id')) {
                        ul.attr('id', 'children_of_'+this.current_category_id);
                    } else if(!ul.length) {
                        ul = $('<ul />').attr('id', 'children_of_'+this.current_category_id);
                        ul.appendTo($('#category_'+this.current_category_id));
                    }
                    if(!datas.category_id) {
                        var li = $('<li />').attr('id', 'category_dummy');
                        li.append('<a class="category_title"><i class="fa fa-sort"></i><span id="category_title_new"></span></a>');
                        li.addClass("list-group-item  content-white-bkg");
                        ul.append(li);
                        li.css("display", "none");
                        $('#category_'+this.current_category_id).append(datas.form_html);
                    } else {
                        $('#category_'+this.current_category_id).children('div').after(datas.form_html);
                    }


                    this.showForm();
                }
            }.bind(this));

        },
        destroy: function() {
            if(this.is_loaded) {
                $('#add_category').unbind('click');
                $('#category_root').off('click', '.category_title');
                $('#category_root').off('mouseenter', '.category_title');
                $('#category_root').off('mouseleave', '.category_title');
                $('#category_root').off('click', '.remove_category');
                this.hideForm();
                $('#category_root').nestedSortable('destroy');
            }
        }
    }
    tabs.addObject('categories', categories);
</script>
<style>
    ul.tree li.placeholder {
        margin: 0;
        padding: 0;
        border: 1px dotted;
        height:45px;
        background: rgba(0, 0, 0, 0.1);
    }
    ul.tree li.placeholder.mjs-nestedSortable-error {
        background: rgba(255, 0, 0, 0.3);
        border-color: red;
        border-style: solid;
    }
</style>
